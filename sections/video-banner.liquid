{% assign block_count = section.blocks.size %}

<style>
  .video-banner-wrapper {
    position: relative;
    height: ({{ block_count }} * 100vh) + 100vh;
  }

  .video-banner {
    position: sticky;
    top: 0;
    height: 100vh;
    z-index: 1;
    width: 100%;
    overflow: hidden;
  }

  .video-banner iframe,
  .video-banner video {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    object-fit: cover;
    border: 0;
  }

  .scrolling-text-container {
    z-index: 2;
    position: relative;
    margin-top: -130vh;
    padding-top: 100vh;
  }

  .text-scroll-item {
    height: 100vh;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    color: #fff;
    text-align: center;
    font-size: 24px;
    animation: fadeText 1.5s ease-in-out;
  }

  .text-scroll-item h2 {
    font-size: 2.25rem;
    margin-bottom: 10px;
    max-width: 800px;
  }

  @keyframes fadeText {
    0% { opacity: 0; transform: translateY(20px); }
    50% { opacity: 1; transform: translateY(0); }
    100% { opacity: 0; transform: translateY(-20px); }
  }
{%- if section.settings.background -%}
  .text-scroll-heading{
    background-color: {{ section.settings.background_color }};
    border-radius: {{ section.settings.corner_radius }}px;
    padding: 5px;
  }
{%- endif -%}
</style>

{% liquid
  assign autoplay = section.settings.video_autoplay
  assign loop = section.settings.video_loop
  assign video_url = ''

  if section.settings.video_url contains 'youtube.com' or section.settings.video_url contains 'youtu.be'
    assign youtube_id = section.settings.video_url | split: 'v=' | last | split: '&' | first
    assign video_url = 'https://www.youtube.com/embed/' | append: youtube_id
    if autoplay
      assign video_url = video_url | append: '?autoplay=1&mute=1'
      if loop
        assign video_url = video_url | append: '&loop=1&playlist=' | append: youtube_id
      endif
    endif
  elsif section.settings.video_url contains 'vimeo.com'
    assign vimeo_id = section.settings.video_url | split: '/' | last
    assign video_url = 'https://player.vimeo.com/video/' | append: vimeo_id
    if autoplay
      assign video_url = video_url | append: '?autoplay=1&muted=1'
      if loop
        assign video_url = video_url | append: '&loop=1'
      endif
    endif
  endif
%}

<div class="video-banner-wrapper">

  <div class="video-banner">
    {% if video_url != blank %}
      <!-- YouTube or Vimeo Video -->
      <iframe
        src="{{ video_url }}"
        title="Video player"
        allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"
        allowfullscreen
      ></iframe>

    {% elsif section.settings.video != blank %}
      <!-- Uploaded Video -->
      <video
        {% if autoplay %}
          autoplay
        {% endif %}
        muted
        {% if loop %}
          loop
        {% endif %}
        playsinline
      >
        {% for source in section.settings.video.sources %}
          <source src="{{ source.url }}" type="{{ source.mime_type }}">
        {% endfor %}
        Your browser does not support the video tag.
      </video>

    {% else %}
      <p>No video provided yet.</p>
    {% endif %}
  </div>

  <div class="scrolling-text-container">
    {%- for block in section.blocks -%}
    <div class="text-scroll-item">
        <h2 class="text-scroll-heading">{{ block.settings.text }}</h2>
    </div>
    {%- endfor -%}
  </div>

</div>

{% schema %}
{
  "name": "Video Background Banner",
  "settings": [
    {
      "type": "select",
      "id": "source",
      "label": "t:settings.video_source",
      "options": [
        {
          "value": "uploaded",
          "label": "t:options.video_uploaded"
        },
        {
          "value": "url",
          "label": "t:options.video_external_url"
        }
      ],
      "default": "uploaded"
    },
    {
      "type": "video",
      "id": "video",
      "label": "t:settings.video",
      "visible_if": "{{ section.settings.source == 'uploaded' }}"
    },
    {
      "type": "video_url",
      "id": "video_url",
      "label": "t:settings.video_external_url",
      "info": "t:info.video_external",
      "accept": ["youtube", "vimeo"],
      "visible_if": "{{ section.settings.source == 'url' }}"
    },
    {
      "type": "checkbox",
      "id": "video_autoplay",
      "label": "t:settings.video_autoplay",
      "info": "t:info.video_autoplay",
      "default": false
    },
    {
      "type": "checkbox",
      "id": "video_loop",
      "label": "t:settings.video_loop",
      "default": true
    },
    {
      "type": "image_picker",
      "id": "cover_image",
      "label": "t:settings.cover_image",
      "visible_if": "{{ section.settings.source == 'url' and section.settings.video_autoplay == false }}"
    },
    {
      "type": "text",
      "id": "alt",
      "label": "t:settings.video_alt_text",
      "info": "t:info.video_alt_text",
      "visible_if": "{{ section.settings.source == 'url' }}"
    },
    {
      "type": "header",
      "content": "t:content.typography"
    },
    {
      "type": "select",
      "id": "type_preset",
      "label": "t:settings.preset",
      "options": [
        {
          "value": "rte",
          "label": "t:options.default"
        },
        {
          "value": "paragraph",
          "label": "t:options.paragraph"
        },
        {
          "value": "h1",
          "label": "t:options.h1"
        },
        {
          "value": "h2",
          "label": "t:options.h2"
        },
        {
          "value": "h3",
          "label": "t:options.h3"
        },
        {
          "value": "h4",
          "label": "t:options.h4"
        },
        {
          "value": "h5",
          "label": "t:options.h5"
        },
        {
          "value": "h6",
          "label": "t:options.h6"
        },
        {
          "value": "custom",
          "label": "t:options.custom"
        }
      ],
      "default": "rte",
      "info": "t:info.edit_presets_in_theme_settings"
    },
    {
      "type": "select",
      "id": "font",
      "label": "t:settings.font",
      "options": [
        {
          "value": "var(--font-body--family)",
          "label": "t:options.body"
        },
        {
          "value": "var(--font-subheading--family)",
          "label": "t:options.subheading"
        },
        {
          "value": "var(--font-heading--family)",
          "label": "t:options.heading"
        },
        {
          "value": "var(--font-accent--family)",
          "label": "t:options.accent"
        }
      ],
      "default": "var(--font-body--family)",
      "visible_if": "{{ section.settings.type_preset == 'custom' }}"
    },
    {
      "type": "select",
      "id": "font_size",
      "label": "t:settings.size",
      "options": [
        {
          "value": "",
          "label": "t:options.default"
        },
        {
          "value": "0.625rem",
          "label": "10px"
        },
        {
          "value": "0.75rem",
          "label": "12px"
        },
        {
          "value": "0.875rem",
          "label": "14px"
        },
        {
          "value": "1rem",
          "label": "16px"
        },
        {
          "value": "1.125rem",
          "label": "18px"
        },
        {
          "value": "1.25rem",
          "label": "20px"
        },
        {
          "value": "1.5rem",
          "label": "24px"
        },
        {
          "value": "2rem",
          "label": "32px"
        },
        {
          "value": "2.5rem",
          "label": "40px"
        },
        {
          "value": "3rem",
          "label": "48px"
        },
        {
          "value": "3.5rem",
          "label": "56px"
        },
        {
          "value": "4.5rem",
          "label": "72px"
        },
        {
          "value": "5.5rem",
          "label": "88px"
        },
        {
          "value": "7.5rem",
          "label": "120px"
        },
        {
          "value": "9.5rem",
          "label": "152px"
        },
        {
          "value": "11.5rem",
          "label": "184px"
        }
      ],
      "default": "1rem",
      "visible_if": "{{ section.settings.type_preset == 'custom' }}"
    },
    {
      "type": "select",
      "id": "line_height",
      "label": "t:settings.line_height",
      "options": [
        {
          "value": "tight",
          "label": "t:options.tight"
        },
        {
          "value": "normal",
          "label": "t:options.normal"
        },
        {
          "value": "loose",
          "label": "t:options.loose"
        }
      ],
      "default": "normal",
      "visible_if": "{{ section.settings.type_preset == 'custom' }}"
    },
    {
      "type": "select",
      "id": "letter_spacing",
      "label": "t:settings.letter_spacing",
      "options": [
        {
          "value": "tight",
          "label": "t:options.tight"
        },
        {
          "value": "normal",
          "label": "t:options.normal"
        },
        {
          "value": "loose",
          "label": "t:options.loose"
        }
      ],
      "default": "normal",
      "visible_if": "{{ section.settings.type_preset == 'custom' }}"
    },
    {
      "type": "select",
      "id": "case",
      "label": "t:settings.case",
      "options": [
        {
          "value": "none",
          "label": "t:options.default"
        },
        {
          "value": "uppercase",
          "label": "t:options.uppercase"
        }
      ],
      "default": "none",
      "visible_if": "{{ section.settings.type_preset == 'custom' }}"
    },
    {
      "type": "select",
      "id": "wrap",
      "label": "t:settings.wrap",
      "options": [
        {
          "value": "pretty",
          "label": "t:options.pretty"
        },
        {
          "value": "balance",
          "label": "t:options.balance"
        },
        {
          "value": "nowrap",
          "label": "t:options.none"
        }
      ],
      "visible_if": "{{ section.settings.type_preset == 'custom' }}"
    },
    {
      "type": "select",
      "id": "color",
      "label": "t:settings.color",
      "options": [
        {
          "value": "var(--color-foreground)",
          "label": "t:options.text"
        },
        {
          "value": "var(--color-foreground-heading)",
          "label": "t:options.heading"
        },
        {
          "value": "var(--color-primary)",
          "label": "t:options.link"
        }
      ],
      "default": "var(--color-foreground)",
      "visible_if": "{{ section.settings.type_preset != 'rte' }}"
    },
    {
      "type": "header",
      "content": "t:content.appearance"
    },
    {
      "type": "checkbox",
      "id": "background",
      "label": "t:settings.background",
      "default": false
    },
    {
      "type": "color",
      "id": "background_color",
      "label": "t:settings.background_color",
      "alpha": true,
      "default": "#00000026",
      "visible_if": "{{ section.settings.background }}"
    },
    {
      "type": "range",
      "id": "corner_radius",
      "label": "t:settings.corner_radius",
      "default": 0,
      "min": 0,
      "max": 50,
      "step": 1,
      "visible_if": "{{ section.settings.background }}"
    }
  ],
  "blocks": [
    {
      "type": "scrolling_text",
      "name": "Scrolling Text",
      "limit": 4,
      "settings": [
        {
          "type": "richtext",
          "id": "text",
          "label": "Text Content",
          "default": "<p>Scrolling Text</p>"
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "Video Background Banner",
      "category": "Media",
      "blocks": [
        {
          "type": "scrolling_text"
        },
        {
          "type": "scrolling_text"
        },
        {
          "type": "scrolling_text"
        },
        {
          "type": "scrolling_text"
        }
      ]
    }
  ]
}
{% endschema %}
