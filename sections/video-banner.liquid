<style>
  .video-banner-wrapper {
    position: relative;
  }

  .video-banner {
    position: sticky;
    top: 0;
    width: 100%;
    height: 100vh;
    overflow: hidden;
    display: flex;
    align-items: center;
    justify-content: center;
    color: #fff;
  }

  .video-banner video,
  .video-banner iframe {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    object-fit: cover;
    z-index: 1;
  }

  .video-banner img.preview-image {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    object-fit: cover;
    z-index: 0;
  }

  .scrolling-text-container {
    position: relative;
    z-index: 10;
  }

  .text-scroll-item {
    height: 100vh;
    display: flex;
    align-items: center;
    justify-content: center;
    padding: 20px;
  }

  .text-content {
    position: relative;
    z-index: 2;
    text-align: center;
    padding: 40px;
    background: rgba(0, 0, 0, 0.5);
    border-radius: 12px;
    max-width: 800px;
    opacity: 0;
    transform: translateY(50px);
    transition: opacity 0.8s ease, transform 0.8s ease;
  }

  .text-scroll-item.active .text-content {
    opacity: 1;
    transform: translateY(0);
  }

  .text-content h2 {
    font-size: 48px;
    margin-bottom: 15px;
    color: #fff;
  }

  .text-content p {
    font-size: 18px;
    margin-bottom: 20px;
    color: #fff;
  }

  /* Mobile adjustments */
  @media (max-width: 768px) {
    .video-banner {
      height: 70vh;
    }

    .text-scroll-item {
      height: 70vh;
    }

    .text-content h2 {
      font-size: 28px;
    }

    .text-content p {
      font-size: 16px;
    }

    .text-content {
      padding: 30px 20px;
    }
  }
</style>

<div class="video-banner-wrapper">
  <section class="video-banner">
    {% if section.settings.source == 'uploaded' %}
      {% if section.settings.video != blank %}
        {% assign video_url = section.settings.video | file_url %}
        <video
          {% if section.settings.video_autoplay %}autoplay{% endif %}
          {% if section.settings.video_loop %}loop{% endif %}
          muted
          playsinline
        >
          <source src="{{ video_url }}" type="video/mp4">
          Your browser does not support the video tag.
        </video>
      {% endif %}
    {% elsif section.settings.source == 'url' %}
      {% if section.settings.video_url != blank %}
        {% if section.settings.video_url.type == 'youtube' %}
          <iframe
            src="https://www.youtube.com/embed/{{ section.settings.video_url.id }}?autoplay={% if section.settings.video_autoplay %}1{% else %}0{% endif %}&loop={% if section.settings.video_loop %}1{% else %}0{% endif %}&mute=1&controls=0&playlist={{ section.settings.video_url.id }}"
            frameborder="0"
            allow="autoplay; encrypted-media"
            allowfullscreen
          ></iframe>
        {% elsif section.settings.video_url.type == 'vimeo' %}
          <iframe
            src="https://player.vimeo.com/video/{{ section.settings.video_url.id }}?autoplay={% if section.settings.video_autoplay %}1{% else %}0{% endif %}&loop={% if section.settings.video_loop %}1{% else %}0{% endif %}&muted=1&controls=0"
            frameborder="0"
            allow="autoplay; fullscreen"
            allowfullscreen
          ></iframe>
        {% endif %}
      {% endif %}
    {% endif %}
  </section>

  <div class="scrolling-text-container">
    {% for block in section.blocks %}
      {% if block.type == 'scrolling_text' %}
        <div class="text-scroll-item" data-block-id="{{ block.id }}">
          <div class="text-content">
            {% if block.settings.text != blank %}
              {{ block.settings.text }}
            {% endif %}
          </div>
        </div>
      {% endif %}
    {% endfor %}
  </div>
</div>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    const textItems = document.querySelectorAll('.text-scroll-item');
    
    if (textItems.length === 0) return;

    const observerOptions = {
      threshold: 0.5,
      rootMargin: '0px'
    };

    const observer = new IntersectionObserver((entries) => {
      entries.forEach(entry => {
        if (entry.isIntersecting) {
          entry.target.classList.add('active');
        } else {
          entry.target.classList.remove('active');
        }
      });
    }, observerOptions);

    textItems.forEach(item => {
      observer.observe(item);
    });
  });
</script>

{% schema %}
{
  "name": "Video Background Banner",
  "settings": [
        {
      "type": "select",
      "id": "source",
      "label": "t:settings.video_source",
      "options": [
        {
          "value": "uploaded",
          "label": "t:options.video_uploaded"
        },
        {
          "value": "url",
          "label": "t:options.video_external_url"
        }
      ],
      "default": "uploaded"
    },
    {
      "type": "video",
      "id": "video",
      "label": "t:settings.video",
      "visible_if": "{{ section.settings.source == 'uploaded' }}"
    },
    {
      "type": "video_url",
      "id": "video_url",
      "label": "t:settings.video_external_url",
      "info": "t:info.video_external",
      "accept": ["youtube", "vimeo"],
      "visible_if": "{{ section.settings.source == 'url' }}"
    },
    {
      "type": "checkbox",
      "id": "video_autoplay",
      "label": "t:settings.video_autoplay",
      "info": "t:info.video_autoplay",
      "default": false
    },
    {
      "type": "checkbox",
      "id": "video_loop",
      "label": "t:settings.video_loop",
      "default": true
    },
    {
      "type": "image_picker",
      "id": "cover_image",
      "label": "t:settings.cover_image",
      "visible_if": "{{ section.settings.source == 'url' and section.settings.video_autoplay == false }}"
    },
    {
      "type": "text",
      "id": "alt",
      "label": "t:settings.video_alt_text",
      "info": "t:info.video_alt_text",
      "visible_if": "{{ section.settings.source == 'url' }}"
    },
    {
      "type": "header",
      "content": "t:content.typography"
    },
    {
      "type": "select",
      "id": "type_preset",
      "label": "t:settings.preset",
      "options": [
        {
          "value": "rte",
          "label": "t:options.default"
        },
        {
          "value": "paragraph",
          "label": "t:options.paragraph"
        },
        {
          "value": "h1",
          "label": "t:options.h1"
        },
        {
          "value": "h2",
          "label": "t:options.h2"
        },
        {
          "value": "h3",
          "label": "t:options.h3"
        },
        {
          "value": "h4",
          "label": "t:options.h4"
        },
        {
          "value": "h5",
          "label": "t:options.h5"
        },
        {
          "value": "h6",
          "label": "t:options.h6"
        },
        {
          "value": "custom",
          "label": "t:options.custom"
        }
      ],
      "default": "rte",
      "info": "t:info.edit_presets_in_theme_settings"
    },
    {
      "type": "select",
      "id": "font",
      "label": "t:settings.font",
      "options": [
        {
          "value": "var(--font-body--family)",
          "label": "t:options.body"
        },
        {
          "value": "var(--font-subheading--family)",
          "label": "t:options.subheading"
        },
        {
          "value": "var(--font-heading--family)",
          "label": "t:options.heading"
        },
        {
          "value": "var(--font-accent--family)",
          "label": "t:options.accent"
        }
      ],
      "default": "var(--font-body--family)",
      "visible_if": "{{ section.settings.type_preset == 'custom' }}"
    },
    {
      "type": "select",
      "id": "font_size",
      "label": "t:settings.size",
      "options": [
        {
          "value": "",
          "label": "t:options.default"
        },
        {
          "value": "0.625rem",
          "label": "10px"
        },
        {
          "value": "0.75rem",
          "label": "12px"
        },
        {
          "value": "0.875rem",
          "label": "14px"
        },
        {
          "value": "1rem",
          "label": "16px"
        },
        {
          "value": "1.125rem",
          "label": "18px"
        },
        {
          "value": "1.25rem",
          "label": "20px"
        },
        {
          "value": "1.5rem",
          "label": "24px"
        },
        {
          "value": "2rem",
          "label": "32px"
        },
        {
          "value": "2.5rem",
          "label": "40px"
        },
        {
          "value": "3rem",
          "label": "48px"
        },
        {
          "value": "3.5rem",
          "label": "56px"
        },
        {
          "value": "4.5rem",
          "label": "72px"
        },
        {
          "value": "5.5rem",
          "label": "88px"
        },
        {
          "value": "7.5rem",
          "label": "120px"
        },
        {
          "value": "9.5rem",
          "label": "152px"
        },
        {
          "value": "11.5rem",
          "label": "184px"
        }
      ],
      "default": "1rem",
      "visible_if": "{{ section.settings.type_preset == 'custom' }}"
    },
    {
      "type": "select",
      "id": "line_height",
      "label": "t:settings.line_height",
      "options": [
        {
          "value": "tight",
          "label": "t:options.tight"
        },
        {
          "value": "normal",
          "label": "t:options.normal"
        },
        {
          "value": "loose",
          "label": "t:options.loose"
        }
      ],
      "default": "normal",
      "visible_if": "{{ section.settings.type_preset == 'custom' }}"
    },
    {
      "type": "select",
      "id": "letter_spacing",
      "label": "t:settings.letter_spacing",
      "options": [
        {
          "value": "tight",
          "label": "t:options.tight"
        },
        {
          "value": "normal",
          "label": "t:options.normal"
        },
        {
          "value": "loose",
          "label": "t:options.loose"
        }
      ],
      "default": "normal",
      "visible_if": "{{ section.settings.type_preset == 'custom' }}"
    },
    {
      "type": "select",
      "id": "case",
      "label": "t:settings.case",
      "options": [
        {
          "value": "none",
          "label": "t:options.default"
        },
        {
          "value": "uppercase",
          "label": "t:options.uppercase"
        }
      ],
      "default": "none",
      "visible_if": "{{ section.settings.type_preset == 'custom' }}"
    },
    {
      "type": "select",
      "id": "wrap",
      "label": "t:settings.wrap",
      "options": [
        {
          "value": "pretty",
          "label": "t:options.pretty"
        },
        {
          "value": "balance",
          "label": "t:options.balance"
        },
        {
          "value": "nowrap",
          "label": "t:options.none"
        }
      ],
      "visible_if": "{{ section.settings.type_preset == 'custom' }}"
    },
    {
      "type": "select",
      "id": "color",
      "label": "t:settings.color",
      "options": [
        {
          "value": "var(--color-foreground)",
          "label": "t:options.text"
        },
        {
          "value": "var(--color-foreground-heading)",
          "label": "t:options.heading"
        },
        {
          "value": "var(--color-primary)",
          "label": "t:options.link"
        }
      ],
      "default": "var(--color-foreground)",
      "visible_if": "{{ section.settings.type_preset != 'rte' }}"
    },
    {
      "type": "header",
      "content": "t:content.appearance"
    },
    {
      "type": "checkbox",
      "id": "background",
      "label": "t:settings.background",
      "default": false
    },
    {
      "type": "color",
      "id": "background_color",
      "label": "t:settings.background_color",
      "alpha": true,
      "default": "#00000026",
      "visible_if": "{{ section.settings.background }}"
    },
    {
      "type": "range",
      "id": "corner_radius",
      "label": "t:settings.corner_radius",
      "default": 0,
      "min": 0,
      "max": 50,
      "step": 1,
      "visible_if": "{{ section.settings.background }}"
    },
  ],
  "blocks": [
    {
      "type": "scrolling_text",
      "name": "Scrolling Text",
      "limit": 5,
      "settings": [
        {
          "type": "richtext",
          "id": "text",
          "label": "Text Content",
          "default": "<p>Scrolling Text</p>"
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "Video Background Banner",
      "category": "Media",
      "blocks": [
        {
          "type": "scrolling_text"
        },
        {
          "type": "scrolling_text"
        }
      ]
    }
  ]
}
{% endschema %}
